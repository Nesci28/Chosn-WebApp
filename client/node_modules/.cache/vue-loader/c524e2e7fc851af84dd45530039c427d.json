{"remainingRequest":"/home/nos/Webapp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nos/Webapp/client/src/views/Rigs.vue?vue&type=style&index=0&id=2ce29be0&scoped=true&lang=css&","dependencies":[{"path":"/home/nos/Webapp/client/src/views/Rigs.vue","mtime":1556240555755},{"path":"/home/nos/Webapp/client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/nos/Webapp/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nos/Webapp/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/nos/Webapp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nos/Webapp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.infoCard {\n  margin-left: auto;\n  margin-right: auto;\n}\n.rounded-card {\n  background-color: rgb(46, 46, 46);\n  border-radius:30px;\n}\n.deleteBtn{\n  margin-left: 4%;\n}\n.confirmBox{\n  color: white;\n}\n.cardTitle{\n  background-color: black;\n}\n.textColor{\n  color: white;\n}\n.editBtn{\n  top: -5px;\n  left: 10px\n}\n.rigCard{\n  border: 5px solid rgb(240, 226, 150);\n  background:rgba(255,255,255,0.10);\n}\n.rigCard:hover{\n  box-shadow: 0 28px 36px rgba(240, 226, 150,0.25), 0 10px 10px rgba(240, 226, 150,0.22);\n}\n.gpuUl {\n  /* background: black; */\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  display: table;\n}\n.gpuLi {\n  width: 20%;\n  text-decoration: none;\n  letter-spacing: 0.10em;\n  display: inline-block;\n  padding: 2px 15px;\n  position: relative;\n  color: white;\n}\n.rigUlGreen {\n  z-index: 9999;\n  display: table;\n  margin: 0;\n}\n.rigUlGreen:hover { \n  width: 100%;\n  background-color: rgba(154, 205, 50, 0.5); \n}\n.rigUlRed {\n  z-index: 9999;\n  display: table;\n  margin: 0;\n}\n.rigUlRed:hover { \n  width: 100%;\n  background-color: rgba(223, 3, 3, 0.5); \n}\n.rigLi {\n  text-decoration: none;\n  width: 80px;\n  display: inline-block;\n  position: relative;\n  text-align: center;\n}\n.span-text {\n  vertical-align:50%;\n}\n\n.fade-in {\n\t-webkit-animation: fade-in 1.2s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\n\t        animation: fade-in 1.2s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\n}\n@-webkit-keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n.redText{\n  animation: flashingRed 1s infinite;\n}\n@keyframes flashingRed {\n  0% { color: red; }\n  25% { color: white; }\n  50% { color: red; }\n  75% { color: white; }\n  100% { color: red; }\n\n}\n.flashingCard {\n\t-webkit-animation: vibrate-1 0.3s linear infinite both;\n\t        animation: vibrate-1 0.3s linear infinite both;\n}\n@-webkit-keyframes vibrate-1 {\n  0% {\n    -webkit-transform: translate(0);\n            transform: translate(0);\n  }\n  20% {\n    -webkit-transform: translate(-2px, 2px);\n            transform: translate(-2px, 2px);\n  }\n  40% {\n    -webkit-transform: translate(-2px, -2px);\n            transform: translate(-2px, -2px);\n  }\n  60% {\n    -webkit-transform: translate(2px, 2px);\n            transform: translate(2px, 2px);\n  }\n  80% {\n    -webkit-transform: translate(2px, -2px);\n            transform: translate(2px, -2px);\n  }\n  100% {\n    -webkit-transform: translate(0);\n            transform: translate(0);\n  }\n}\n@keyframes vibrate-1 {\n  0% {\n    -webkit-transform: translate(0);\n            transform: translate(0);\n  }\n  20% {\n    -webkit-transform: translate(-2px, 2px);\n            transform: translate(-2px, 2px);\n  }\n  40% {\n    -webkit-transform: translate(-2px, -2px);\n            transform: translate(-2px, -2px);\n  }\n  60% {\n    -webkit-transform: translate(2px, 2px);\n            transform: translate(2px, 2px);\n  }\n  80% {\n    -webkit-transform: translate(2px, -2px);\n            transform: translate(2px, -2px);\n  }\n  100% {\n    -webkit-transform: translate(0);\n            transform: translate(0);\n  }\n}\n",{"version":3,"sources":["Rigs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAybA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Rigs.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-app>\n    <div class=\"background\"></div>\n    <div class=\"content\">\n      <v-layout class=\"pt-5\" row wrap>\n        <v-flex xs16 sm16 md6 lg6 v-for=\"rig in rigNumber\" :key=\"rig\" pa-4>\n\n            <v-card v-bind:class=\"{ flashingCard: !rigStatus[rig - 1] && !disableSwitch[rig - 1] }\" v-model=\"rigHostname[rig - 1]\" class=\"fade-in rounded-card rigCard\" height=\"100%\" top=\"30%\">  \n              <h1 @click=\"rigGraph=!rigGraph\" v-bind:class=\"{ redText: !rigStatus[rig - 1] && !disableSwitch[rig - 1] }\" class=\"textColor pl-3\" style=\"text-align:left;float:left;\">{{ rigHostname[rig - 1] }}</h1> \n              <v-switch\n                style=\"text-align:left;float:left;\"\n                v-if='!rigStatus[rig - 1]'\n                v-model=\"disableSwitch[rig - 1]\"\n                @change=\"updateSession\"\n                color=\"red\"\n                height=0.01\n                class=\"lastSeen mt-3 ml-5\"\n                dark\n              ></v-switch>\n              <h2 v-if='!rigStatus[rig - 1]' class=\"white--text pt-1 pr-3\" style=\"text-align:right;float:right;\">{{ rigSeen[rig - 1] }} ago</h2> \n              <hr style=\"clear:both;\" color=\"#F0E296\"/>\n              \n              <div>\n                <ul v-if='rigBrand[rig - 1].includes(\"Nvidia\")' style=\"cursor: pointer\" class=\"rigUlGreen white--text\">\n                  <li class=\"rigLi\" @click='hashrateOver(\"nvidia\")'>\n                    <img src=\"../assets/nvidia.png\" height=\"30\" class=\"pt-2\" fill-height>\n                  </li>\n                  <li class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>{{ coin[rig - 1][0] }}</li>\n                  <li class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>{{ algo[rig - 1][0] }}</li>\n                  <li v-if=\"rigStatus[rig - 1]\" class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>{{ hashrateNvidia[rig - 1] }}</li>\n                  <li v-else class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>null</li>\n                  <li v-if=\"rigStatus[rig - 1]\" class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>{{ parseInt(temperatureNvidia[rig - 1]) }} °C</li>\n                  <li v-else class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>null</li>\n                  <li v-if=\"rigStatus[rig - 1]\" class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>{{ parseInt(wattNvidia[rig - 1]) }} W</li>\n                  <li v-else class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>null</li>\n                </ul>\n                <v-divider color=\"#F0E296\"></v-divider>\n                <ul v-if='rigBrand[rig - 1].includes(\"Amd\")' style=\"cursor: pointer\"  class=\"rigUlRed white--text\">\n                  <li class=\"rigLi\" @click='hashrateOver(\"amd\")'>\n                    <img src=\"../assets/amd.png\" height=\"30\" class=\"pt-2\" fill-height>\n                  </li>\n                  <li class=\"rigLi\" @click='hashrateOver(\"amd\", rig)'>{{ coin[rig - 1][1] }}</li>\n                  <li class=\"rigLi\" @click='hashrateOver(\"amd\", rig)'>{{ algo[rig - 1][1] }}</li>\n                  <li v-if=\"rigStatus[rig - 1]\" class=\"rigLi\" @click='hashrateOver(\"amd\", rig)'>{{ hashrateAmd[rig - 1] }}</li>\n                  <li v-else class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>null</li>\n                  <li v-if=\"rigStatus[rig - 1]\" class=\"rigLi\" @click='hashrateOver(\"amd\", rig)'>{{ parseInt(temperatureAmd[rig - 1]) }} °C</li>\n                  <li v-else class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>null</li>\n                  <li v-if=\"rigStatus[rig - 1]\" class=\"rigLi\" @click='hashrateOver(\"amd\", rig)'>{{ parseInt(wattAmd[rig - 1]) }} W</li>\n                  <li v-else class=\"rigLi\" @click='hashrateOver(\"nvidia\", rig)'>null</li>\n                </ul>\n                <v-divider color=\"#F0E296\"></v-divider>\n\n                <div class=\"pt-2\">\n                  <v-menu offset-y>\n                    <v-btn slot=\"activator\" color=\"transparent\" class=\"white--text editBtn\">Edit</v-btn>\n                    <v-list dark>\n                      <v-list-tile\n                        v-for=\"(item, index) in editList\"\n                        :key=\"index\"\n                        :to=\"{ name: 'Edit' + item, params: { id: rigHostname[rig - 1] } }\"\n                      >\n                        <v-list-tile-title>{{ item }}</v-list-tile-title>\n                      </v-list-tile>\n                    </v-list>\n                  </v-menu>\n                  <v-menu offset-y>\n                    <v-btn slot=\"activator\" color=\"transparent\" class=\"white--text editBtn\">Logs</v-btn>\n                    <v-list dark>\n                      <v-list-tile\n                        v-for=\"(item, index) in logsList\"\n                        :key=\"index\"\n                        :to=\"{ name: 'logs', params: { id: rigHostname[rig - 1] } }\"\n                      >\n                        <v-list-tile-title>{{ item }}</v-list-tile-title>\n                      </v-list-tile>\n                    </v-list>\n                  </v-menu>\n                  <v-menu offset-y>\n                    <v-btn slot=\"activator\" color=\"transparent\" class=\"white--text editBtn\">Actions</v-btn>\n                    <v-list dark>\n                      <v-list-tile\n                        v-for=\"(item, index) in actionList\"\n                        :key=\"index\"\n                        @click=\"action(index, rigHostname[rig - 1], rig - 1)\"\n                      >\n                        <v-list-tile-title>{{ item }}</v-list-tile-title>\n                      </v-list-tile>\n                    </v-list>\n                  </v-menu>\n                  <v-btn @click=\"rigGraph = !rigGraph\" color=\"transparent\" class=\"white--text editBtn\">View Graphs</v-btn>\n                  <v-btn @click=\"btnDelete(rigHostname[rig - 1])\" color=\"error\" class=\"black--text editBtn\">Delete</v-btn>\n                </div>\n              </div>\n            </v-card>\n        </v-flex>\n        <v-progress-circular\n        :size=\"140\"\n        :width=\"14\"\n        v-if=\"loading\"\n        indeterminate\n        color=\"rgb(240, 226, 150)\"\n        class=\"middle\"\n      ></v-progress-circular>\n      </v-layout>\n      \n      <v-flex xs16 sm16 md6 lg6>\n        <v-dialog v-model=\"deleteCard\" width=\"75%\">\n          <v-card class=\"infoCard rounded-card\">\n            <v-card-title class=\"red--text headline lighten-2 cardTitle\" primary-title>\n            Delete this rig ?\n            </v-card-title>\n            <v-text-field\n                class=\"confirmBox pr-5 pl-5 pt-5\"\n                color=\"white\"\n                label=\"Write 'DELETE' to confirm\"\n                v-model=\"confirmText\"\n                outline\n              ></v-text-field>\n              <v-btn @click=\"deleteRig\" v-if=\"confirmText == 'DELETE'\" color=\"warning\" class=\"deleteBtn\">Confirm</v-btn>\n          </v-card>      \n        </v-dialog>\n      </v-flex>\n\n      <v-flex xs16 sm16 md6 lg6>\n        <v-dialog v-model=\"gpuDialog\" width=\"75%\">\n          <v-card class=\"infoCard rounded-card\">\n            <v-card-title v-if='brand==\"Nvidia\"' class=\"green--text headline lighten-2 cardTitle\" primary-title>\n            {{ brand }}\n            </v-card-title>\n            <v-card-title v-if='brand==\"Amd\"' class=\"red--text headline lighten-2 cardTitle\" primary-title>\n            {{ brand }}\n            </v-card-title>\n            <ul class=\"white--text gpuUl\">\n              <li class=\"gpuLi\">GPU #</li>\n              <li class=\"gpuLi\">hashrate</li>\n              <li class=\"gpuLi\">temperature</li>\n              <li class=\"gpuLi\">watt</li>\n              <li class=\"gpuLi\">name</li>                \n            </ul>\n            <v-divider color=\"#F0E296\"></v-divider>\n\n            <div v-if='brand==\"Nvidia\"'>\n              <ul v-for=\"i in gpuNumberNvidia[key - 1]\" :key=\"i\" class=\"white--text gpuUl\">\n                <li class=\"gpuLi\">{{ i }}</li>\n                <li class=\"gpuLi\">{{ gpuHashrateNvidia[key - 1][i - 1] || \"undefined\" }}</li>\n                <li class=\"gpuLi\">{{ Number(gpuTemperatureNvidia[key - 1][i - 1]).toFixed(0) || \"undefined\" }} °C</li>\n                <li class=\"gpuLi\">{{ gpuWattNvidia[key - 1][i - 1] || \"undefined\" }}</li>\n                <li class=\"gpuLi\">{{ gpuNameNvidia[key - 1][i - 1] || \"undefined\" }}</li>                \n              </ul>\n            </div>\n            <div v-if='brand==\"Amd\"'>\n              <ul v-for=\"i in gpuNumberAmd[key - 1]\" :key=\"i\" class=\"white--text gpuUl\">\n                <li class=\"gpuLi\">{{ i }}</li>\n                <li class=\"gpuLi\">{{ Number(gpuTemperatureAmd[key - 1][i - 1]).toFixed(0) || \"undefined\" }} °C</li>\n                <li class=\"gpuLi\">{{ gpuHashrateAmd[key - 1][i - 1] || \"undefined\" }}</li>\n                <li class=\"gpuLi\">{{ gpuWattAmd[key - 1][i - 1] || \"undefined\" }} W</li>\n                <li class=\"gpuLi\">{{ gpuNameAmd[key - 1][i - 1] || \"undefined\" }}</li>\n              </ul>\n            </div>\n          </v-card>      \n        </v-dialog>\n      </v-flex>\n\n      <v-flex xs16 sm16 md6 lg6>\n        <v-dialog v-model=\"rigGraph\" width=\"75%\">\n          <v-card class=\"infoCard rounded-card\">\n            <h1 class=\"white--text\">Grafana Graphs</h1>\n          </v-card>      \n        </v-dialog>\n      </v-flex>\n\n    </div>\n  </v-app>\n</template>\n\n<script>\nconst axios = require('axios');\naxios.defaults.withCredentials = true\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      urlLogin: '',\n      urlGet: '',\n      urlCommand: '',\n      urlDelete: '',\n      urlUpdateSession: '',\n      i: 0,\n      disableSwitch: [],\n      deleteHostname: null,\n      loading: true,\n\n      coin: [],\n      algo: [],\n      timeDifference: [],\n      rigNumber: [],\n      testRigNumber: [],\n      rigSeen: [],\n      rigHostname: [],\n      rigStatus: [],\n      rigBrand: [],\n      rigSSH: [],\n      counter: 1,\n\n      hashrateNvidia: [],\n      hashrateAmd: [],\n      temperatureNvidia: [],\n      temperatureAmd: [],\n      wattNvidia: [],\n      wattAmd: [],\n      \n      gpuNumberNvidia: [],\n      gpuUtilizationNvidia: [],\n      gpuHashrateNvidia: [],\n      gpuTemperatureNvidia: [], \n      gpuWattNvidia: [], \n      gpuCClockNvidia: [], \n      gpuMClockNvidia: [],\n      gpuNameNvidia: [],\n\n      gpuNumberAmd: [],\n      gpuUtilizationAmd: [],\n      gpuHashrateAmd: [],\n      gpuTemperatureAmd: [], \n      gpuWattAmd: [], \n      gpuCClockAmd: [], \n      gpuMClockAmd: [], \n      gpuNameAmd: [],\n\n      brand: undefined,\n      gpuDialog: false,\n      rigGraph: false,\n      deleteCard: false,\n      confirmText: '',\n      key: 0,\n\n      editList: [\"System\", \"Coins\", \"Overclocks\"],\n      logsList: [\"Miners\"],\n      actionList: [\"SSH\", \"Restart nOS\", \"Restart Rig\", \"Shutdown Rig\"],\n\n      APITimer: undefined\n    };\n  },\n  methods: {\n    async updateSession() {\n      this.rigHostname = []\n      this.$store.state.json.forEach(data => {\n        this.rigHostname.push(data.Hostname)\n      })\n      let res = await axios.post(this.urlUpdateSession, this.disableSwitch)\n    },\n    btnDelete(hostname) {\n      this.deleteCard = !this.deleteCard\n      this.confirmText = ''\n      this.deleteHostname = hostname\n    },\n    async deleteRig() {\n      await axios.post(this.urlDelete, {\n        \"hostname\": this.deleteHostname\n      })\n      window.location.reload()\n    },\n    createCmdObject(hostname, cmd) {\n      return {\n        \"hostname\": hostname,\n        \"command\": cmd\n      }\n    },\n    action(index, hostname, i) {\n      if (index == 0) {\n        let win = window.open(this.rigSSH[i], '_noblank')\n        win.focus()\n      } else if (index == 1) {\n        axios.post(this.urlCommand, this.createCmdObject(hostname, 'start'))\n      } else if (index == 2) {\n        axios.post(this.urlCommand, this.createCmdObject(hostname, 'sudo shutdown -r now'))\n      } else if (index == 2) {\n        axios.post(this.urlCommand, this.createCmdObject(hostname, 'sudo shutdown now'))\n      }\n    },\n    hashrateOver(brand, key) {\n      this.gpuDialog = !this.gpuDialog\n      if (brand == \"nvidia\") {\n        this.brand = \"Nvidia\"\n        this.key = key\n      } else {\n        this.brand = \"Amd\"\n        this.key = key\n      }\n    },\n    rigNames(response) {\n      this.rigHostname = new Set()\n      this.rigNumber = []\n      this.rigSSH = []\n      for (let i = 0; i < response.length; i++) {\n        this.rigHostname.add(response[i].Hostname)\n        this.rigSSH.push(response[i].Shellinabox)\n        this.rigNumber.push(i + 1)\n      }\n    },\n    rigTimes(response) {\n      for (let i = 0; i < response.length; i++) {\n        let now = + new Date()\n        this.timeDifference[i] = now - response[i][\"New Time\"]\n        if (this.timeDifference[i] < 1 * 120 * 1000) {\n          this.rigStatus[i] = true\n          this.rigSeen[i] = \"< 30 secs\"\n        } else {\n          this.rigStatus[i] = false\n          let time = this.timeDifference[i]\n          time = Math.round(time / 1000 / 60)\n          this.rigSeen[i] = \"> \" + time + \" mins\"\n        }\n      }\n    },\n    rigGPU(response) {\n      for (let i = 0; i < response.length; i++) {\n        if (Object.keys(response[i].Nvidia.GPU).length > 0 && Object.keys(response[i].Amd.GPU).length > 0) {\n          this.rigBrand[i] = [\"Nvidia\", \"Amd\"]\n          this.gpuNumberNvidia[i] = response[i].Nvidia.GPU.length\n          this.gpuNumberAmd[i] = response[i].Amd.GPU.length\n          this.coin[i] = [response[i].Nvidia.Coin, response[i].Amd.Coin]\n          this.algo[i] = [response[i].Nvidia.Algo, response[i].Amd.Algo]\n          this.getGpuInfo(i, \"Nvidia\", response)\n          this.getGpuInfo(i, \"Amd\", response)\n        } else if (Object.keys(response[i].Nvidia.GPU).length > 0) {\n          this.rigBrand[i] = \"Nvidia\"\n          this.gpuNumberNvidia[i] = response[i].Nvidia.GPU.length\n          this.coin[i] = [response[i].Nvidia.Coin]\n          this.algo[i] = [response[i].Nvidia.Algo]\n          this.getGpuInfo(i, \"Nvidia\", response)\n        } else if (Object.keys(response[i].Amd.GPU).length > 0) {\n          this.rigBrand[i] = \"Amd\"\n          this.gpuNumberAmd[i] = response[i].Amd.GPU.length\n          this.coin[i] = [\"\", response[i].Amd.Coin]\n          this.algo[i] = [\"\", response[i].Amd.Algo]\n          this.getGpuInfo(i, \"Amd\", response)\n        }\n      }\n    },\n    async rigInfo() {\n      this.loading = true\n      let response = await axios.post(this.urlGet)\n      this.loading = false\n      console.log(response.data)\n      this.$store.state.json = response.data\n\n      this.rigNames(response.data)\n      this.rigTimes(response.data)\n      this.rigGPU(response.data)\n\n      this.rigHostname = Array.from(this.rigHostname)\n\n      this.APITimer = setTimeout(this.rigInfo, 30000)\n      // this.APITimer = setTimeout(this.rigInfo, 5000)\n    },\n    gpuInfo(response, i, brand) {\n      let gpuHashTemp = []\n      let gpuTempTemp = []\n      let gpuWattTemp = []\n      let gpuNameTemp = []\n      for (let j = 0; j < response[i][brand].GPU.length; j++) {\n        gpuHashTemp.push(response[i][brand].GPU[j].Hashrate)\n        gpuTempTemp.push(response[i][brand].GPU[j].Temperature)\n        gpuWattTemp.push(response[i][brand].GPU[j].Watt)\n        gpuNameTemp.push((response[i][brand].GPU[j].Name).replace(/GeForce GTX/, ''))   \n      }\n      return {\n        \"gpuHashTemp\": gpuHashTemp,\n        \"gpuTempTemp\": gpuTempTemp,\n        \"gpuWattTemp\": gpuWattTemp,\n        \"gpuNameTemp\": gpuNameTemp\n      }\n    },\n    getGpuInfo(i, brand, response) {\n      if (brand == \"Nvidia\") {      \n        let gpuInformations = this.gpuInfo(response, i, 'Nvidia')\n\n        this.hashrateNvidia[i] = response[i].Nvidia[\"Total Hashrate\"]\n        this.temperatureNvidia[i] = response[i].Nvidia[\"Avg Temperature\"]\n        this.wattNvidia[i] = response[i].Nvidia[\"Total Watt\"]\n        this.gpuHashrateNvidia[i] = gpuInformations.gpuHashTemp\n        this.gpuTemperatureNvidia[i] = gpuInformations.gpuTempTemp\n        this.gpuWattNvidia[i] = gpuInformations.gpuWattTemp\n        this.gpuNameNvidia[i] = gpuInformations.gpuNameTemp\n        // console.log(this.gpuHashrateNvidia, this.gpuTemperatureNvidia, this.gpuWattNvidia, this.gpuNameNvidia)\n      } else {\n        let gpuInformations = this.gpuInfo(response, i, 'Amd')\n\n        this.hashrateAmd[i] = response[i].Amd[\"Total Hashrate\"]\n        this.temperatureAmd[i] = response[i].Amd[\"Avg Temperature\"]\n        this.wattAmd[i] = response[i].Amd[\"Total Watt\"]\n        this.gpuHashrateAmd[i] = gpuInformations.gpuHashTemp\n        this.gpuTemperatureAmd[i] = gpuInformations.gpuTempTemp\n        this.gpuWattAmd[i] = gpuInformations.gpuWattTemp\n        this.gpuNameAmd[i] = gpuInformations.gpuNameTemp\n        // console.log(this.gpuHashrateAmd, this.gpuTemperatureAmd, this.gpuWattAmd, this.gpuNameAmd)\n      }\n    }\n  },\n  created() {\n    if (window.location.href.includes('localhost')) {\n      this.urlLogin = \"http://localhost:5000/action/login\"\n      this.urlGet = \"http://localhost:5000/db\"\n      this.urlCommand = 'http://localhost:5000/rig/command/'\n      this.urlDelete = 'http://localhost:5000/rig/delete/'\n      this.urlUpdateSession = 'http://localhost:5000/db/updateSession/'\n    } else if (window.location.href.includes('192.168')) {\n      this.urlLogin = \"http://192.168.0.127:5000/action/login\"\n      this.urlGet = \"http://192.168.0.127:5000/db\"\n      this.urlCommand = 'http://192.168.0.127:5000/rig/command/'\n      this.urlDelete = 'http://192.168.0.127:5000/rig/delete/'\n      this.urlUpdateSession = 'http://192.168.0.127:5000/db/updateSession/'\n    } else {\n      this.urlLogin = \"https://nos-server.now.sh/action/login\"\n      this.urlGet = 'https://nos-server.now.sh/db/'\n      this.urlCommand = 'https://nos-server.now.sh/rig/command/'\n      this.urlDelete = 'https://nos-server.now.sh/rig/delete/'\n      this.urlUpdateSession = 'https://nos-server.now.sh/db/updateSession/'\n    }\n    axios.post(this.urlGet)\n      .then(res => {\n        if (res.data == \"not logged in!\") this.$router.push('/')\n        else {\n          axios.get(this.urlLogin)\n            .then(res => {\n              this.disableSwitch = res.data.rigsState\n              this.rigInfo()\n            })\n        }\n      })\n  },\n  destroyed() {\n    clearTimeout(this.APITimer);\n  }\n}\n\n</script>\n\n<style scoped>\n.infoCard {\n  margin-left: auto;\n  margin-right: auto;\n}\n.rounded-card {\n  background-color: rgb(46, 46, 46);\n  border-radius:30px;\n}\n.deleteBtn{\n  margin-left: 4%;\n}\n.confirmBox{\n  color: white;\n}\n.cardTitle{\n  background-color: black;\n}\n.textColor{\n  color: white;\n}\n.editBtn{\n  top: -5px;\n  left: 10px\n}\n.rigCard{\n  border: 5px solid rgb(240, 226, 150);\n  background:rgba(255,255,255,0.10);\n}\n.rigCard:hover{\n  box-shadow: 0 28px 36px rgba(240, 226, 150,0.25), 0 10px 10px rgba(240, 226, 150,0.22);\n}\n.gpuUl {\n  /* background: black; */\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  display: table;\n}\n.gpuLi {\n  width: 20%;\n  text-decoration: none;\n  letter-spacing: 0.10em;\n  display: inline-block;\n  padding: 2px 15px;\n  position: relative;\n  color: white;\n}\n.rigUlGreen {\n  z-index: 9999;\n  display: table;\n  margin: 0;\n}\n.rigUlGreen:hover { \n  width: 100%;\n  background-color: rgba(154, 205, 50, 0.5); \n}\n.rigUlRed {\n  z-index: 9999;\n  display: table;\n  margin: 0;\n}\n.rigUlRed:hover { \n  width: 100%;\n  background-color: rgba(223, 3, 3, 0.5); \n}\n.rigLi {\n  text-decoration: none;\n  width: 80px;\n  display: inline-block;\n  position: relative;\n  text-align: center;\n}\n.span-text {\n  vertical-align:50%;\n}\n\n.fade-in {\n\t-webkit-animation: fade-in 1.2s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\n\t        animation: fade-in 1.2s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\n}\n@-webkit-keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n.redText{\n  animation: flashingRed 1s infinite;\n}\n@keyframes flashingRed {\n  0% { color: red; }\n  25% { color: white; }\n  50% { color: red; }\n  75% { color: white; }\n  100% { color: red; }\n\n}\n.flashingCard {\n\t-webkit-animation: vibrate-1 0.3s linear infinite both;\n\t        animation: vibrate-1 0.3s linear infinite both;\n}\n@-webkit-keyframes vibrate-1 {\n  0% {\n    -webkit-transform: translate(0);\n            transform: translate(0);\n  }\n  20% {\n    -webkit-transform: translate(-2px, 2px);\n            transform: translate(-2px, 2px);\n  }\n  40% {\n    -webkit-transform: translate(-2px, -2px);\n            transform: translate(-2px, -2px);\n  }\n  60% {\n    -webkit-transform: translate(2px, 2px);\n            transform: translate(2px, 2px);\n  }\n  80% {\n    -webkit-transform: translate(2px, -2px);\n            transform: translate(2px, -2px);\n  }\n  100% {\n    -webkit-transform: translate(0);\n            transform: translate(0);\n  }\n}\n@keyframes vibrate-1 {\n  0% {\n    -webkit-transform: translate(0);\n            transform: translate(0);\n  }\n  20% {\n    -webkit-transform: translate(-2px, 2px);\n            transform: translate(-2px, 2px);\n  }\n  40% {\n    -webkit-transform: translate(-2px, -2px);\n            transform: translate(-2px, -2px);\n  }\n  60% {\n    -webkit-transform: translate(2px, 2px);\n            transform: translate(2px, 2px);\n  }\n  80% {\n    -webkit-transform: translate(2px, -2px);\n            transform: translate(2px, -2px);\n  }\n  100% {\n    -webkit-transform: translate(0);\n            transform: translate(0);\n  }\n}\n</style>\n\n"]}]}