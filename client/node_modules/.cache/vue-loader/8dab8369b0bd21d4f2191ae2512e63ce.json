{"remainingRequest":"/home/nos/Webapp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nos/Webapp/client/src/views/AboutnOS.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nos/Webapp/client/src/views/AboutnOS.vue","mtime":1556072564713},{"path":"/home/nos/Webapp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nos/Webapp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nos/Webapp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      imgDialog: {\n        \"one\": false,\n        \"two\": false\n      },\n      screenshot: {\n          \"one\": require('../assets/1.png'),\n          \"two\": require('../assets/2.png')\n      },\n      size: null,\n    }\n  },\n  methods: {\n    calculateSize(width) {\n      if (width > 1242) this.size = \"49%\"\n      else this.size = \"90%\"\n    }\n  },\n  mounted() {\n    let width = window.innerWidth\n    this.calculateSize(width)\n    this.$nextTick(() => {\n      window.addEventListener('resize', () => {\n        let width = window.innerWidth\n        this.calculateSize(width)\n      });\n    })\n  },\n}\n",{"version":3,"sources":["AboutnOS.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AboutnOS.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-app>\n    <div class=\"background\"></div>\n    <div class=\"text pa-5\">\n      <h3 class=\"white--text\"><span class=\"logoColor\">nOS (node-OS)</span> is a complete rewritten of CHOSN, but not endorsed by it.  After the dead of the CHOSN project, due to the lack of time and lost of interest of 2 of it's original developpers, I decided to totally rewrite my own project from the ground up.  Another reason why I chose to totally rewrite it over continuing the old project was; the lack of documentation, version control management and too many \"hacks\" that was making it too hard to maintain.  \n      <br /><br />\n      <span class=\"logoColor\">nOS </span>is totally free of charge and <span class=\"blue--text\">open source </span> under the GPL_v3 license.\n      <br /><br />\n      It is possible to run <span class=\"logoColor\">nOS</span> by either downloading the image and \"etch\" it or by cloning the github and installing the dependancies.  <span class=\"logoColor\">nOS's</span> image uses the distro Arch with i3-gaps as the DE.\n      <br /><br />\n      <span class=\"logoColor\">nOS </span> is made with nodejs for cross-platform purposes.  The server back-end is made with Express, the front-end with VueJS and I used Mongo as the Databases.\n      <br /><br />\n      Features: <br />\n      - Compatible Nvidia, AMD <br />\n      - Automatic GPU Temperature controller: Controls the fans of the GPUs to reach the target temperature, if the fans reach the maximum value, it drops the wattage of the GPU until the target temperature is reached.  <br />\n      - Automatic GPU Power controller: Controls the power wattage of the GPU. <br />\n      - Automatic GPU Overclock controller: Controls the overclock values by either using best known value from the DB or set it manually to desired values. <br />\n      - WebApp to see and control the rigs live <br />\n      - Very easy-to-use OS and WebApp.  <br />\n      </h3>\n    \n      <v-img @click=\"imgDialog.one = !imgDialog.one\" :src=screenshot.one style=\"cursor: pointer\" v-bind:style=\"{ width: size }\" class=\"imageBorder\"></v-img>\n      <v-dialog v-model=\"imgDialog.one\" width=\"90%\">\n        <v-img @click=\"imgDialog.one = !imgDialog.one\" :src=screenshot.one style=\"border: 1px solid white\"></v-img>\n      </v-dialog>\n\n      <v-img @click=\"imgDialog.two = !imgDialog.two\" :src=screenshot.two style=\"cursor: pointer\" v-bind:style=\"{ width: size }\" class=\"imageBorder\"></v-img>\n      <v-dialog v-model=\"imgDialog.two\" width=\"90%\">\n        <v-img @click=\"imgDialog.two = !imgDialog.two\" :src=screenshot.two style=\"border: 1px solid white\"></v-img>\n      </v-dialog>\n    </div>\n\n  </v-app>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      imgDialog: {\n        \"one\": false,\n        \"two\": false\n      },\n      screenshot: {\n          \"one\": require('../assets/1.png'),\n          \"two\": require('../assets/2.png')\n      },\n      size: null,\n    }\n  },\n  methods: {\n    calculateSize(width) {\n      if (width > 1242) this.size = \"49%\"\n      else this.size = \"90%\"\n    }\n  },\n  mounted() {\n    let width = window.innerWidth\n    this.calculateSize(width)\n    this.$nextTick(() => {\n      window.addEventListener('resize', () => {\n        let width = window.innerWidth\n        this.calculateSize(width)\n      });\n    })\n  },\n}\n</script>\n\n<style scoped>\n.imageBorder{\n  /* margin: 0 auto; */\n  float:left;\n  margin: 5px;\n  margin-top: 50px;\n  border: 1px solid white;\n}\n.logoColor{\n  color: rgb(240, 226, 150);\n}\n.textSecond{\n  margin-left: 5%;\n  margin-right: 5%;\n  margin-bottom: 5%;\n  border: 5px solid white;\n  background: rgba(0,0,0,0.75);\n  z-index: 1;\n}\n.text{\n  margin: 5%;\n  border: 5px solid white;\n  background: rgba(0,0,0,0.75);\n  z-index: 1;\n}\n.linkText{\n  text-decoration: underline;\n}\n</style>\n\n"]}]}