{"remainingRequest":"/home/nos/Webapp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nos/Webapp/client/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nos/Webapp/client/src/views/Login.vue","mtime":1556727463893},{"path":"/home/nos/Webapp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nos/Webapp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nos/Webapp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst axios = require('axios');\naxios.defaults.withCredentials = true\naxios.defaults.headers = {\n  'Content-Type': 'application/json'\n}\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      urlGet: '',\n      loggedIn: false,\n      user: {\n        login: \"\",\n        password: \"\",\n      },\n      resData: ''\n    }\n  },\n  methods: {\n    async checkLogin() {\n      let res = await axios.get(this.urlGet)\n      this.resData = res.data\n      if (res.data == 'not logged in!') {\n          let dbEntry = await axios.post(this.urlGet, {\n            username: this.user.login.toString(),\n            password: this.user.password.toString()\n          })\n          if (dbEntry.data.isAuthenticated) {\n            this.$router.push('/rigs')\n            window.location.reload()\n          }\n        \n      }\n    }\n  },\n  mounted() {\n    window.addEventListener('keyup', event => {\n      if (event.keyCode === 13) { \n        this.checkLogin()\n      }\n    })\n  },\n  async created() {\n    if (window.location.href.includes('localhost')) {\n      this.urlGet = \"http://localhost:5000/action/login\"\n    } else if (window.location.href.includes('192.168')) {\n      this.urlGet = \"http://192.168.0.127:5000/action/login/\"\n    } else {\n      this.urlGet = 'https://nos-server.now.sh/action/login/'\n    }\n    // fetch(this.urlGet)\n    //     .then(function(response) {\n    //       if (!response.ok) {\n    //         throw Error(response.statusText);\n    //       }\n    //       return response.json();\n    //     }).then(function(response) {\n    //         console.log(response);\n    //     }).catch(function(error) {\n    //         console.log(error);\n    //     });\n\n\n    let res = await axios.get(this.urlGet)\n    console.log(res)\n    if (res.data.isAuthenticated) this.$router.push('/rigs')\n  }\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-app>\n    <div class=\"background\"></div>\n      <v-form v-on:submit=\"checkLogin\" class=\"login-box box pa-5\">\n        <h1>Login</h1>\n\n        <div class=\"textbox\">\n          <v-icon color=\"white\">account_box</v-icon>\n          <input type=\"text\" placeholder=\"Email address\" v-model=\"user.login\">\n        </div>\n\n        <div class=\"textbox\">\n          <v-icon color=\"white\">lock</v-icon>\n          <input type=\"password\" placeholder=\"Password\" v-model=\"user.password\">\n        </div>\n\n        <v-btn flat @click=\"checkLogin\" color=\"#F0E296\" class=\"btn\">Sign in</v-btn>\n        <h3 class=\"white--text pt-2\"><v-icon color=\"#F0E296\" medium>info</v-icon> Use the login information from SystemConfig.json</h3>\n        <h3 class=\"white--text pt-2\"><v-icon color=\"#F0E296\" medium>info</v-icon> For a demo, use <span class=\"logoColor\">markgagnon // root</span> as the account information.</h3>\n      </v-form>\n  </v-app>\n</template>\n\n<script>\nconst axios = require('axios');\naxios.defaults.withCredentials = true\naxios.defaults.headers = {\n  'Content-Type': 'application/json'\n}\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      urlGet: '',\n      loggedIn: false,\n      user: {\n        login: \"\",\n        password: \"\",\n      },\n      resData: ''\n    }\n  },\n  methods: {\n    async checkLogin() {\n      let res = await axios.get(this.urlGet)\n      this.resData = res.data\n      if (res.data == 'not logged in!') {\n          let dbEntry = await axios.post(this.urlGet, {\n            username: this.user.login.toString(),\n            password: this.user.password.toString()\n          })\n          if (dbEntry.data.isAuthenticated) {\n            this.$router.push('/rigs')\n            window.location.reload()\n          }\n        \n      }\n    }\n  },\n  mounted() {\n    window.addEventListener('keyup', event => {\n      if (event.keyCode === 13) { \n        this.checkLogin()\n      }\n    })\n  },\n  async created() {\n    if (window.location.href.includes('localhost')) {\n      this.urlGet = \"http://localhost:5000/action/login\"\n    } else if (window.location.href.includes('192.168')) {\n      this.urlGet = \"http://192.168.0.127:5000/action/login/\"\n    } else {\n      this.urlGet = 'https://nos-server.now.sh/action/login/'\n    }\n    // fetch(this.urlGet)\n    //     .then(function(response) {\n    //       if (!response.ok) {\n    //         throw Error(response.statusText);\n    //       }\n    //       return response.json();\n    //     }).then(function(response) {\n    //         console.log(response);\n    //     }).catch(function(error) {\n    //         console.log(error);\n    //     });\n\n\n    let res = await axios.get(this.urlGet)\n    console.log(res)\n    if (res.data.isAuthenticated) this.$router.push('/rigs')\n  }\n};\n</script>\n\n<style scope>\n.box{\n  margin-top: 5%;\n  width: 90%;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  border: 5px solid white;\n  background: rgba(0,0,0,0.75);\n  z-index: 1;\n}\n.login-box{\n  vertical-align: middle;\n  color: white;\n}\n.login-box h1{\n  float: left;\n  font-size: 40px;\n  border-bottom: 6px solid rgb(240, 226, 150);\n  margin-bottom: 50px;\n  padding: 13px 0;\n}\n.textbox{\n  width: 100%;\n  overflow: hidden;\n  font-size: 20px;\n  padding: 8px 0;\n  margin: 8px 0;\n  border-bottom: 1px solid white;\n}\n.textbox i{\n  width: 26px;\n  float: left;\n  text-align: center;\n}\n.textbox input{\n  border: none;\n  outline: none;\n  background: none;\n  color: white;\n  font-size: 18px;\n  width: 50%;\n  float: left;\n  margin: 0 10px;\n}\n.btn{\n  width: 100%;\n  background: none;\n  border: 3px solid rgb(240, 226, 150);\n  color: rgb(240, 226, 150);\n  padding: 5px;\n  font-size: 30px;\n  margin: 12px 0;\n  height: 20%;\n}\n</style>\n\n"]}]}